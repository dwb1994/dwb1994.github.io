{"version":3,"sources":["webpack:///./src/templates/blog-list.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","location","keywords","map","node","frontmatter","fields","slug","className","key","onClick","window","open","date","dangerouslySetInnerHTML","__html","excerpt","photos","length","src","style","display","flexWrap","justifyContent","alignItems","listStyle","padding","to","rel","Array","from","_","i","margin","textDecoration","color","background","React","Component"],"mappings":"2KAMMA,E,kGACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MACrC,EAAkCR,KAAKC,MAAMQ,YAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAAC,IAAD,CAAQE,SAAUjB,KAAKC,MAAMgB,SAAUZ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOH,EACPgB,SAAU,CAAC,OAAD,yDAEXZ,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNf,EAAQe,EAAKC,YAAYhB,OAASe,EAAKE,OAAOC,KACpD,OACE,6BAASC,UAAU,SAASC,IAAKL,EAAKE,OAAOC,KAAMG,QAAS,kBAAMC,OAAOC,KAAKR,EAAKE,OAAOC,KAAM,WAC5F,yBAAKC,UAAU,kBACb,wBAAIA,UAAU,SAASnB,GACvB,+BAAQe,EAAKC,YAAYQ,MACzB,uBAAGC,wBAAyB,CAAEC,OAAQX,EAAKY,YAG3CZ,EAAKC,YAAYY,QAAUb,EAAKC,YAAYY,OAAOC,QAAUd,EAAKC,YAAYY,OAAO,GACrF,yBAAKT,UAAU,cACb,yBAAKA,UAAU,SAASW,IAAKf,EAAKC,YAAYY,QAAUb,EAAKC,YAAYY,OAAOC,QAAUd,EAAKC,YAAYY,OAAO,MAC3G,SAKnB,wBACEG,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,SAChBC,WAAY,SACZC,UAAW,OACXC,QAAS,KAGT9B,GACA,kBAAC,OAAD,CAAM+B,GAAI7B,EAAU8B,IAAI,QAAxB,mBAIDC,MAAMC,KAAK,CAAEZ,OAAQvB,IAAY,SAACoC,EAAGC,GAAJ,OAChC,wBACEvB,IAAG,qBAAsBuB,EAAI,GAC7BZ,MAAO,CACLa,OAAQ,UAGV,kBAAC,OAAD,CACEN,GAAE,KAAY,IAANK,EAAU,GAAKA,EAAI,GAC3BZ,MAAO,CACLc,eAAgB,OAChBC,MAAOH,EAAI,IAAMtC,EAAc,UAAY,GAC3C0C,WAAYJ,EAAI,IAAMtC,EAAc,UAAY,GAChDgC,QAAS,SAGVM,EAAI,QAITnC,GACA,kBAAC,OAAD,CAAM8B,GAAI3B,EAAU4B,IAAI,QAAxB,kB,GAvEYS,IAAMC,WAiFfzD","file":"component---src-templates-blog-list-js-9a53de580341d7f6b4cb.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/Layout'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `dwb`, `董文博`, `dwbbb`, `dwbbb.com`,`javascript`, `design`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article className=\"m-post\" key={node.fields.slug} onClick={() => window.open(node.fields.slug, '_self')}>\n                <div className=\"m-post-content\">\n                  <h3 className=\"title\">{title}</h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                </div>\n                {\n                  node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0] ?\n                  <div className=\"m-post-img\">\n                    <img className=\"ui-img\" src={node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0]} />\n                  </div> : null\n                }\n            </article>\n          )\n        })}\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: '0 8px',\n              }}\n            >\n              <Link\n                to={`/${i === 0 ? '' : i + 1}`}\n                style={{\n                  textDecoration: 'none',\n                  color: i + 1 === currentPage ? '#ffffff' : '',\n                  background: i + 1 === currentPage ? '#007acc' : '',\n                  padding: '.5em'\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        frontmatter: {\n          type: {\n            in: [\"blog\", \"design\", \"hobby\"]\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(\n            format: PLAIN\n            pruneLength: 90\n            truncate: true\n          )\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            type\n            photos\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}