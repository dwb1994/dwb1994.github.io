{"data":{"site":{"siteMetadata":{"title":"dwb-blog","author":"dwb"}},"markdownRemark":{"id":"c8cff42e-469f-5908-abd3-7ca8af0c9bcf","html":"<h1>使用 React 管理你的设计资产</h1>\n<h2>前言</h2>\n<p>最近在整理设计规范的过程中，尝试使用了 Airbnb 公司发布的 <a href=\"https://github.com/airbnb/react-sketchapp\">react-sketchapp</a> 工具，感觉非常好用，在这里墙裂推荐一哈，顺便聊一聊使用过程中的体会：</p>\n<p>这是一个使用 React 生成 Sketch 文件的命令行工具，主要用于生成设计系统(design system)，**简单来说就是使用 <code class=\"language-text\">代码</code> 生成 <code class=\"language-text\">设计稿</code> **。这个跨界的工具提供了一种很新颖的思路，在某些特定情况下有其应用场景。</p>\n<p>设计师同学们可能不了解 React，如果你们想了解一点点编程的话，从这个工具开始学习，可能是一个很好的入口 😁</p>\n<h2>为什么要用代码生成设计稿</h2>\n<p>用代码生成设计稿是一种新颖的思路，那么为什么要这样做呢？这样做有什么好处？官方是这样介绍的：</p>\n<blockquote>\n<p>Managing the assets of design systems in Sketch is complex, error-prone and time consuming. Sketch is scriptable, but the API often changes. React provides the perfect wrapper to build reusable documents in a way already familiar to JavaScript developers.</p>\n</blockquote>\n<p>简言之：<strong>代码可以更好地控制设计资产的版本迭代</strong>。这也是我们使用这个工具的核心原因：设计资产的稳定迭代能够提高设计师与零设计团队的工作效率。</p>\n<p>在设计规范逐渐复杂时，对规范的版本迭代变得越来越难。以往设计师需要手动去修改规范，这样往往容易出错，而且速度比较慢，尤其是制作一些重复性较强的内容的时候，例如调色板上面可能会有上百种颜色，这些色彩可能会频繁调整。</p>\n<p>除此以外，使用代码生成设计稿还有一些优点：</p>\n<ol>\n<li>代码可以方便地输出重复性的视图</li>\n<li>React-sketchapp 这个工具使用 React 的语法，有利于程序上的复用，包括组件代码及其样式。个人感觉写起来很像 React Native</li>\n<li>使用真实数据或组件生成设计稿，这将使设计稿与最终产出的页面更接近</li>\n<li>基于 Sketch 定制一些效率工具，举个栗子：<strong>通过简单的配置生成完整设计规范</strong></li>\n</ol>\n<h2>如何使用？</h2>\n<h3>快速上手</h3>\n<p>上手 react-sketchapp 很简单，首先确保你已经安装了 43 及以上版本的 sketch，确保安装了 npm。</p>\n<p>然后在终端中执行下面两句命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/airbnb/react-sketchapp.git // 从 github 上将 react-sketchapp 项目克隆到本地\n<span class=\"token function\">cd</span> react-sketchapp/examples/basic-setup // 进入项目的 /examples/basic-setup 目录\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> // 安装 <span class=\"token function\">npm</span> 依赖</code></pre></div>\n<p>安装完成后<strong>新建一个 sketch 文件</strong>，这里注意一定要<strong>新建文件</strong>，react-sketchapp 会在当前<strong>最新</strong>打开的 sketch 文件进行输出！</p>\n<p>然后在终端中输入下面这条命令并执行（执行后请不要关闭终端窗口）：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run render</code></pre></div>\n<p>在 sketch 文件中看到下图的样子说明配置成功：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg3cdlfs9j31js0v0474.jpg\"></p>\n<p>用编辑器打开 react-sketchapp 目录，里面 /examples/basic-setup/src/my-command.js 就是上图的代码，现在可以复制官方给的一段示例代码到这个文件中简单地看下效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> Artboard <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-sketchapp'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Artboard</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> fontFamily<span class=\"token punctuation\">:</span> <span class=\"token string\">'Comic Sans MS'</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'hotPink'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Artboard</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span> <span class=\"token attr-name\">message</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Hello world!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">currentPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>点击保存，sketch 文件会自动刷新，刷新后是下图的效果：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg3ky8d5qj318g0loq7m.jpg\"></p>\n<h3>使用 API</h3>\n<p>react-sketchapp 提供了全面的 API，包含了绝大部分 sketch 的功能</p>\n<p>首先打开 <a href=\"http://airbnb.io/react-sketchapp/docs/API.html#document\">API 文档地址</a>, 左侧的 <strong>API Reference</strong> 就是 API 列表，这里面我常用的 API 有：</p>\n<ul>\n<li>Document: sketch 文档</li>\n<li>Page: 页面</li>\n<li>Artboard: 画板</li>\n<li>Image: 图像</li>\n<li>Text: 文字</li>\n<li>View: 文件夹（矩形），类似 React Native 中的 View 组件</li>\n<li>StyleSheet: react-sketchapp 封装了一些样式的函数，使用它可以更好的复用代码</li>\n<li>TextStyles: 共享文本样式</li>\n</ul>\n<p>使用这些组件的时候，需要在文件顶部进行 API 的引用，以逗号分隔，不引入则会报错：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Document<span class=\"token punctuation\">,</span> Page<span class=\"token punctuation\">,</span> Artboard <span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-sketchapp'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>现在来尝试组合使用上述 API，输出一个页面：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> Document<span class=\"token punctuation\">,</span> Page<span class=\"token punctuation\">,</span> Artboard<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> Image <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-sketchapp'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Document</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Page</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Artboard</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ymfe.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span> backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'#333'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">source</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ws1.sinaimg.cn/large/006oPFLAly1fqg4tqz7d2j30be06mjrl.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">140</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Artboard</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Page</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Document</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">currentPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上述案例的输出结果是：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg4z3eol9j318g0saq94.jpg\"></p>\n<p>除了上述这些基本功能，react-sketchapp 甚至还可以输出 Symbol，例如如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">,</span> Artboard<span class=\"token punctuation\">,</span> makeSymbol <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-sketchapp'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">BlueSquare</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span>\n    <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Blue Square<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> BlueSquareSymbol <span class=\"token operator\">=</span> <span class=\"token function\">makeSymbol</span><span class=\"token punctuation\">(</span>BlueSquare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Main</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Artboard</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BlueSquareSymbol</span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Artboard</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Main</span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">currentPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>执行后输出结果是：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg4bqnuu8j30k409kt99.jpg\"></p>\n<p>这将带来更大的可能性：<strong>直接用代码输出完整 UI Kit 模板文件</strong></p>\n<h2>我们的实践</h2>\n<p>我们根据一系列色彩、字号参数，使用 react-sketchapp 制作了设计规范的调色板、文字规范及项目色彩规范。</p>\n<p>由于开发的项目独立性较强，有些项目需要进行一定的定制（一般是字号、颜色），因此基于 <strong>顶级设计规范</strong> 来制定 <strong>项目设计规范</strong>，我们在 <a href=\"https://ydoc.ymfe.org/\">YDoc - 优雅的文档站构建工具</a> 中率先使用了导出的项目设计规范，并严格执行，取得了不错的效果：</p>\n<p>有兴趣同学可以查看 <a href=\"https://ydoc.ymfe.org/standard/style-guide.html#ydoc-%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83-%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83%E6%96%87%E4%BB%B6\">YDoc 项目规范文件</a> , 完全用 react-sketchapp 输出的 sketch 文件：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg5gc8g3uj328018qqhk.jpg\"></p>\n<h2>进一步思考</h2>\n<h3>1. 零设计团队需要设计规范吗</h3>\n<p>国内很多团队缺少设计师，或者设计资源不够充足，往往需要程序员直接上手进行设计（尤其是中后台系统），这时程序员就会跟着感觉走，写出丑陋的页面甚至难以维护的代码。缺乏规范的页面即使使用了美观的 UI 库也会成为东施效颦，不伦不类。</p>\n<p>因此对于这样的团队来说，程序员学习一些设计规范的基本使用方式，将会大大改善这一情况：遵循一定的设计规范进行设计将会快速提高这些页面的颜值，工具赏心悦目，使用者使用起来工作也会很开心。</p>\n<h3>2. 效率工具</h3>\n<p>前面提到了 React-sketchapp 可以基于 Sketch 定制一些效率工具，这其实带来了无限的可能性：</p>\n<p>这些工具的输入可以是非常简单的一些配置项，例如产品的颜色、文本大小等，而这些工具的最终产物可能是 Sketch 文件、PDF文件、也可能是代码或图片，其中 Sketch 文件可用于生成设计规范，提供给设计师进行业务组件的二次设计；PDF 可以直接用于浏览打印；图片可以单独使用，也能够以 <code class=\"language-text\">案例图</code> 的形式存在。</p>\n<p>React-sketchapp 只是提供了一个思路，打通程序与设计后，诸如此类的工具还有非常大的空间等待挖掘。</p>\n<h3>3. 关于程序员使用设计工具</h3>\n<p>由于程序学习成本很高，我们仅在自研项目中做了这样的尝试，因此在设计稿中经常会看到一些工程师思维 😂</p>\n<p>在设计规范的制作中，我们团队遇到了这样一种情况：有同学进行了一次有趣的尝试，将 JavaScript 中 <code class=\"language-text\">原型链(prototype)</code> 的思想应用到 Sketch 的 Symbol 中，由于 Symbols 中很多组件都类似，因此相似组件继承自同一个 Symbol 而只改变文本颜色、边框、背景色等属性，如下图：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg5nse1i4j31q20tun3j.jpg\"></p>\n<p>此外，还将常用属性制作成配置项，只需进行选择即可修改组件样式：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006oPFLAly1fqg5tsnjqkj31b00qc44d.jpg\"></p>\n<p>这些优化其实有点过度封装了：</p>\n<ul>\n<li>前者原型链模式可读性太差，设计师很难理解，但是可以<strong>把原型写到程序里，在 sketch 设计稿中隐藏这一概念</strong>，这样既有利于维护设计稿，又利于 sketch 文件的使用；</li>\n<li>后者封装的配置项过于死板，不够灵活：实际开发中设计师往往将设计稿中的组件分离，对属性逐个调整，而我们预设的配置项往往无法满足各式各样的需求，反而会增加设计稿的制作成本。</li>\n</ul>\n<h2>总结：</h2>\n<p>用代码控制设计规范的迭代，是一个很新颖的想法，在设计与技术之间跨界，实现难度比较大。react-sketchapp 这个工具提供了很多可能性，让艺术与技术能够更紧密地联系起来，让技术可以为艺术提供更好的支持。</p>\n<p>我们尚在摸索中前行，做了一些大胆的尝试，就让时间证明它创造的价值吧 👻</p>","frontmatter":{"title":"使用 React 管理你的设计资产","date":"April 15, 2018"},"excerpt":"使用 React 管理你的设计资产 前言 最近在整理设计规范的过程中，尝试使用了 Airbnb 公司发布的  react-sketchapp  工具，感觉非常好用，在这里墙裂推荐一哈，顺便聊一聊使用过程中的体会： 这是一个使用 React 生成 Sketch 文件的命令行工具，主要用于生成设计系统(design sy…"}},"pageContext":{"slug":"/blog/react-sketchapp-build-design-system/","previous":{"fields":{"slug":"/blog/ant-design-palettes/"},"frontmatter":{"title":"Ant Design 色板生成算法演进之路","type":"blog","photos":["https://ws1.sinaimg.cn/large/006oPFLAly1fmsct1vx9vj31hc0zf7ri.jpg"],"tags":["design","规范","团队协作"]}},"next":{"fields":{"slug":"/blog/improve-web-legibility/"},"frontmatter":{"title":"提高网页设计里文本的易读性","type":"blog","photos":["https://ww1.sinaimg.cn/large/006oPFLAly1fvkzqj4gqnj31hc0zkn3e.jpg"],"tags":["design"]}}}}