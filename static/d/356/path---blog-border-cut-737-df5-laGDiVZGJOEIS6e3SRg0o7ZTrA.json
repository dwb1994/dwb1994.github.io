{"data":{"site":{"siteMetadata":{"title":"dwb-blog","author":"dwb"}},"markdownRemark":{"id":"bf619a73-d186-5ca3-8229-576ec7adb990","html":"<p>在最近项目的一个列表中有这样一个细节，设计稿就是上面这样的：↑</p>\n<p>这里的每行中间都会有一条1px的横线，有时候我们不希望横线填满100%的宽度，那么怎么做呢？</p>\n<h2>一、每条横线单独写一个div，div的高度设置1px，宽度设置95%或者其他值</h2>\n<p>这样做好处是比较直观，坏处是会使HTML结构比较乱，不利于维护，对于seo来说这个div也没有语义。</p>\n<h2>二、给列表的父级元素设置padding-left的值</h2>\n<p>这样做少些了很多代码，只用一句就使所有列表项右移一段距离，然后每个列表项设置border-top或者border-bottom就可以实现这个效果。</p>\n<p>这样做的好处就是少些代码，代码逻辑清晰，也有不好的地方：</p>\n<p>1.列表里如果有内外边距，计算时要算到父级元素的padding-left，计算比较麻烦；</p>\n<p>2.如果列表项可以展开，可能出现下面这样的情况：\n<img src=\"/img/others/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE16%E5%B9%B406%E6%9C%8818%E6%97%A51949_3.png\"></p>\n<p>左侧会空出 一部分空间，这时我们可以用负的margin-left值来移动下面灰色的展开项，使其对其到屏幕左侧。</p>\n<p>3.列表项的DOM元素会丢失一部分，也就是左侧的内边距，比如列表项有点击事件监听的话，点击左侧区域是无效的：</p>\n<p><img src=\"/img/others/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE16%E5%B9%B406%E6%9C%8818%E6%97%A51951_4.png\"></p>\n<h2>三、使用伪元素选择器</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item:after</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -1px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #FFFFFF<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在item前面(:before)或者后面(:after)添加一个伪div元素，实际这个元素不占据DOM结构，把这个元素绝对定位到border上面，覆盖掉一部分border。</p>\n<p><img src=\"/img/others/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE16%E5%B9%B406%E6%9C%8818%E6%97%A52003_5.png\"></p>","frontmatter":{"title":"几种截取部分 border 的方法","date":"June 18, 2016"},"excerpt":"在最近项目的一个列表中有这样一个细节，设计稿就是上面这样的：↑ 这里的每行中间都会有一条1px的横线，有时候我们不希望横线填满100%的宽度，那么怎么做呢？ 一、每条横线单独写一个div，div的高度设置1px，宽度设置95%或者其他值 这样做好处是比较直观，坏处是会使HTML结构比较乱，不利于维护，对于seo来说这个div也没有语义。 二、给列表的父级元素设置padding-left的值 这样做少些了很多代码，只用一句就使所有列表项右移一段距离，然后每个列表项设置border-top或者border-bottom…"}},"pageContext":{"slug":"/blog/border-cut/","previous":{"fields":{"slug":"/blog/scroll-optimize/"},"frontmatter":{"title":"Scroll 事件及页面渲染优化","type":"blog","photos":["/img/others/stock-624712_1920.jpg"],"tags":["性能优化"],"process":null}},"next":{"fields":{"slug":"/blog/footer-fix/"},"frontmatter":{"title":"页脚固定在浏览器底部的几种方式","type":"blog","photos":["/img/others/mountaineering-2040824@sm.jpg"],"tags":["layout"],"process":null}}}}