{"data":{"site":{"siteMetadata":{"title":"dwb-blog","author":"dwb"}},"markdownRemark":{"id":"3884af56-950f-508b-aff7-8ab3b87c4433","html":"<h2>零、前言</h2>\n<p>最近帮公司团队整理了一套 git commit message 的规范，遵循这种规范可以使团队在git上清晰地看到每次提交是什么类型的内容，便于追踪提交记录。</p>\n<p>以下是规范的内容和在项目中配置commit message格式验证的脚本：</p>\n<h2>一、Message格式</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">></span></span>(<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>subject</span><span class=\"token punctuation\">></span></span>\n// 空一行\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n// 空一行\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>二、描述</h2>\n<ol>\n<li>type</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Tables</th>\n<th align=\"left\">Are</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">feat</td>\n<td align=\"left\">新功能 (feature)</td>\n</tr>\n<tr>\n<td align=\"left\">fix</td>\n<td align=\"left\">修复问题</td>\n</tr>\n<tr>\n<td align=\"left\">docs</td>\n<td align=\"left\">修改文档/注释等 (documentation)</td>\n</tr>\n<tr>\n<td align=\"left\">refactor</td>\n<td align=\"left\">对原提交的修改或重构（理论上不影响现有功能）</td>\n</tr>\n<tr>\n<td align=\"left\">chore</td>\n<td align=\"left\">修改构建工具/依赖等</td>\n</tr>\n<tr>\n<td align=\"left\">refactor</td>\n<td align=\"left\">对原提交的修改或重构（理论上不影响现有功能）</td>\n</tr>\n<tr>\n<td align=\"left\">opti</td>\n<td align=\"left\">优化(样式/交互/逻辑)等</td>\n</tr>\n</tbody>\n</table>\n<p>注意事项</p>\n<ul>\n<li>\n<p>type名称全部小写</p>\n</li>\n<li>\n<p>type后面紧跟英文冒号</p>\n</li>\n<li>\n<p>冒号后需要保留一个空格</p>\n</li>\n<li>\n<p><scope>(可选)\n修改文件的范围（包括但不限于 doc, middleware, core, config, plugin）</p>\n</li>\n<li>\n<p>subject\n少于100字，简短清晰地阐述提交内容\n行末空一行</p>\n</li>\n<li>\n<p>body(可选)\n补充subject，如必要性、解决的问题、可能影响的地方，可以换行\n如果有链接一定附上链接</p>\n</li>\n<li>\n<p>footer(可选)\nbug的id、issue的id等</p>\n</li>\n</ul>\n<h2>三、示例</h2>\n<ol>\n<li>简单示例\n<code class=\"language-text\">feat: 完成登录页面布局</code></li>\n<li>\n<p>完整示例(执行 git commit 即可编辑多行的commit message)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docs: 使用ydoc3.1更新文档\n添加新版本说明，包括新功能的使用方式\n修复首页标题的错别字和链接地址错误 http://ued.qunar.com/ydoc/\nClose #321</code></pre></div>\n</li>\n</ol>\n<h2>四、在项目中配置commit message格式验证</h2>\n<ol>\n<li>使用npm安装验证工具\n<code class=\"language-text\">npm install validate-commit-msg ghooks --save-dev</code></li>\n<li>在package.json文件中添加配置</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"ghooks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"commit-msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"validate-commit-msg\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"validate-commit-msg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"feat\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"fix\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"docs\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"chore\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"refactor\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"opti\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"warnOnFail\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"maxSubjectLength\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"subjectPattern\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".+\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"subjectPatternErrorMsg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请输入message信息!\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"helpMessage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Commit message 格式错误, \\n请查看规范: https://dwbbb.com/blog/Git-Commit-Message/\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Git Commit Message规范","date":"June 14, 2017"},"excerpt":"零、前言 最近帮公司团队整理了一套 git commit message 的规范，遵循这种规范可以使团队在git上清晰地看到每次提交是什么类型的内容，便于追踪提交记录。 以下是规范的内容和在项目中配置commit message格式验证的脚本： 一、Message格式 二、描述 type Tables Are feat 新功能 (feature) fix 修复问题 docs 修改文档/注释等 (documentation) refactor 对原提交的修改或重构（理论上不影响现有功能） chore 修改构建工具/依赖等 refactor 对原提交的修改或重构（理论上不影响现有功能） opti…"}},"pageContext":{"slug":"/blog/Git-Commit-Message/","previous":{"fields":{"slug":"/blog/sketch-design/"},"frontmatter":{"title":"使用Sketch制作APP视觉设计稿","type":"blog","photos":["http://orqz380f2.bkt.clouddn.com/office-583841_1920.jpg"],"tags":["Sketch","Design","UI","Mobile","React-Native","团队协作"],"process":null}},"next":{"fields":{"slug":"/blog/MaterialDesignAntDesign/"},"frontmatter":{"title":"漫谈 Material Design & Ant Design","type":"blog","photos":["/img/MaterialDesignAntDesign/006cGJIjly1fkb4dt55tmj31hc0rttaj.jpg"],"tags":["design","规范","团队协作"],"process":null}}}}