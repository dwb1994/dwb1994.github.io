{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/mars-ui-convergence/","result":{"data":{"site":{"siteMetadata":{"title":"dwb-blog","author":"dwb"}},"markdownRemark":{"id":"5b73f2dd-4b4e-5d5b-9e90-f6de0ec2a8ff","html":"<blockquote>\n<p>文章摘要：前段时间我在公司参与开发了内部项目（以下称作 “M 项目” ），开发一段时间后，项目的 UI 设计风格、前端样式代码逐渐散乱。本文记录了一次从散乱到收敛的实践过程，顺便介绍了一种通过代码管理设计规范的方案，希望能给大家带来帮助。</p>\n</blockquote>\n</blockquote>\n<h2>一、背景</h2>\n<ol>\n<li>M 项目的设计稿，经历过若干次迭代后，设计风格、规范发生了一些变化；UI 设计时有些设计元素偏离了设计规范。</li>\n<li>前端开发时，code review 频率不高，样式代码的编写有待规范，例如有时有的同学直接从摹客生成的冗余样式代码复制过来用。</li>\n<li>前端、UI 对设计规范的理解不一致，例如 UI 的 font-weight 有 400/500/600/700 的设计，而前端一般只处理 normal/bold</li>\n</ol>\n<p>从设计角度，偏离设计规范会引起<strong>信息结构混乱，无法形成有效的亲密性、对比、对齐关系。</strong></p>\n<p>在代码中主要的问题表现为：<strong>不使用公共变量、公共变量多、相似颜色多，不利于代码的维护。</strong></p>\n<p>因此我抽时间整理了一下需要收敛的样式，与 PM、UI 交流，共同整理了一套设计规范，对齐前端、UI 对设计规范的理解，这有助于规范代码中的设计变量，规范设计师设计 M 项目的设计稿。</p>\n<h2>二、收敛过程</h2>\n<h3>1. 梳理变量</h3>\n<p>排查所有页面及代码，梳理要收敛的样式，梳理成下列形式：</p>\n<p>（内容大致相似，篇幅有限，在此列举一部分）</p>\n<pre style=\"background-color: #eee; white-space: pre-wrap;\">\n**颜色:**\n主色收敛\n1968e5;（旧设计稿用的多）\n1763fb;（正在使用）\n2a69ff（H5 主色）\n005cff（H5 背景色、主色）\n#1a76fc(首页)\n统一成 1763fb？\n\n<p style=\"color: red\">待确认，h5背景色暂时保留</p>\n\n<img src=\"/img/mars/text.png\" />\n\n<b>字重收敛</b>\n\n设计师给出的 font-weight 可能包含“400、500、700、800”，开发时减少字重只设置 normal(默认) 和 bold，其他字重不做区分。\n\n设计师在进行设计的时候要注意，默认字重(normal)和 400 等值，bold 和 700 等值，其他粗细的值不应做设计，对于粗体的使用应相对谨慎，粗体影响文本所占据的宽度。\n\n原因：\n1. 区别不大，无法有效地区分信息层级；\n2. 提高代码可维护性\n\n<b>字号收敛</b>\n\n使用双数字号：部分 UI 设计稿用到了奇数字号（13px 15px等），前端不做处理，而是尽可能和 PC 端相同元素的字号保持一致。\n\n行高规则：\n1. 1.5 倍行高\n2. 保持双数字号的行高\n\n<b>原因：</b>\n1. 字阶尽可能有一定跨度，便于区分不同的信息层次；\n2. 减少字阶规定的字号个数，便于前端维护样式代码；\n3. 奇数字号在进行对齐的时候不容易对齐，兼容性也有一些问题；\n\n<b>建议的字阶：</b>\n<img src=\"/img/mars/font-level.png\" />\n\n<b>圆角收敛</b>\n4px 5px 7px 8px 9px\n收敛成两种圆角 => 4px 8px\n\n<b>边距</b>\n8的倍数\n4、8、16、24、32\n设计近似为8的倍数时，使用8的倍数的距离\n避免使用 12、20 这样的距离值，如果设计师不可避免，则开发时单独处理\n</pre>\n<h3>2. 开会沟通</h3>\n<ol>\n<li>前端、产品、设计师开会，沟通梳理的变量；</li>\n<li>沟通并对齐设计规范的理解、前端提出设计规范的建议；</li>\n<li>会后：设计师进行设计规范的确认，PM 再次确认修改后的视觉效果。</li>\n</ol>\n<h3>3. 收敛详情</h3>\n<h4>主色：</h4>\n<p>目前项目和设计稿中存在以下5种主色：</p>\n<p>1968e5;（旧设计稿用的多）</p>\n<p>1763fb;（正在使用）</p>\n<p>2a69ff（H5 主色）</p>\n<p>005cff（H5 背景色、主色）</p>\n<p><span>#1a76fc(首页)<span></p>\n<p>收敛结果：</p>\n<p><img src=\"/img/mars/color.png\"></p>\n<h4>文本颜色：</h4>\n<ol>\n<li>去掉 text-color 默认的 #000</li>\n<li>色值的新旧对比\n<img src=\"/img/mars/color-text.png\"></li>\n</ol>\n<p><strong>附：提升彩色背景下的文字对比度（<a href=\"http://dwbbb.com/blog/improve-web-legibility/\">http://dwbbb.com/blog/improve-web-legibility/</a>）：</strong>\n在彩色背景上使用灰色文本会降低对比度:\n<img src=\"/img/mars/color-compare.jpeg\"></p>\n<h4>收敛结果：</h4>\n<img src=\"/img/mars/res1.png\" width=\"40%\">\n<h4>icon 收敛结果：</h4>\n<p><img src=\"/img/mars/res2.png\"></p>\n<h4>边框：</h4>\n<p>输入框边框 #d9d9d9</p>\n<img src=\"/img/mars/res3.png\" width=\"60%\">\n<img src=\"/img/mars/res4.png\" width=\"40%\">\n<p>输入框边框（antd）等，也有很多地方用到 #ebecf0、#d9d9d9</p>\n<p>普通边框（大部分）#eeeeee</p>\n<p>表格边框：#f0f0f0</p>\n<p>共计5种，收敛结果：\n<img src=\"/img/mars/res6.png\"></p>\n<h4>背景色：</h4>\n<p>h5 首页背景色：#fafbfa</p>\n<p>h5 子页面：#fafafa</p>\n<p>pc 大部分页面背景色 #f7f7f7</p>\n<p>表格背景色：#f8f9fa</p>\n<p>共计4种，收敛结果：</p>\n<p><img src=\"/img/mars/res7.png\"></p>\n<p>PC背景色适配新色板的色值：</p>\n<p><img src=\"/img/mars/res8.png\"></p>\n<h4>按钮背景色： #eee</h4>\n<img src=\"/img/mars/res9.png\" width=\"40%\">\n<p>适配新色板的色值，收敛结果：</p>\n<img src=\"/img/mars/res10.png\" width=\"40%\">\n<h4>文本：</h4>\n<ol>\n<li>\n<p>字重收敛</p>\n<p>设计师给出的 font-weight 可能包含“<strong>400</strong>、500、<strong>700</strong>、800”，开发时减少字重只设置 normal(默认) 和 bold，其他字重不做区分。</p>\n<p>设计师在进行设计的时候要注意，默认字重(normal)和 400 等值，bold 和 700 等值，其他粗细的值不应做设计，对于粗体的使用应相对谨慎，粗体影响文本所占据的宽度。</p>\n<p><strong>原因：</strong></p>\n<p><strong>区别不大，无法有效地区分信息层级；提高代码可维护性</strong></p>\n</li>\n<li>\n<p>字号收敛</p>\n<p>使用双数字号：</p>\n<p>部分 UI 设计稿用到了奇数字号（13px 15px等），前端不做处理，而是尽可能和 PC 端相同元素的字号保持一致。</p>\n<p>行高规则：</p>\n<ol>\n<li>1.5 倍行高</li>\n<li>保持双数字号的行高</li>\n<li>1.5 倍行高如果是单数则 -1，双数不变</li>\n</ol>\n<p><strong>原因：</strong></p>\n<p><strong>字阶尽可能有一定跨度，便于区分不同的信息层次；</strong></p>\n<p><strong>减少字阶规定的字号个数，便于前端维护样式代码；</strong></p>\n<p><strong>奇数字号在进行对齐的时候不容易对齐，兼容性也有一些问题</strong></p>\n</li>\n</ol>\n<h4>圆角：</h4>\n<p>2px 4px 5px 7px 8px 9px 16px</p>\n<p>共计7种，收敛成4种：</p>\n<p>收敛成两种主要的圆角 => 4px 8px</p>\n<p>和两种不常用的圆角 => 2px 16px</p>\n<p><img src=\"/img/mars/res11.png\"></p>\n<h4>边距：</h4>\n<p>8的倍数</p>\n<p>4、8、16、24、32</p>\n<p>设计近似为8的倍数时，使用8的倍数的距离</p>\n<p>避免使用 12、20 这样的距离值，如果设计师不可避免，则开发时单独处理</p>\n<h3>3. 产出：设计规范</h3>\n<p>a. 经过上面的梳理，设计师给了我们一份下面这样的设计规范：</p>\n<img src=\"/img/mars/res12.png\" width=\"40%\">\n<p>b. 使用 React 管理设计规范，详情请看第三部分（设计规范）</p>\n<h3>4. 组内分享</h3>\n<p>进行组内分享，使前端开发者对设计规范理解一致</p>\n<h2>三、设计规范</h2>\n<h3>1. 什么是设计规范？</h3>\n<p>设计规范的形式：以图片&#x26;文字、网页（摹客）的形式展示配色、文本字号、排版信息，提供给设计、开发人员使用，作为设计、开发的参考。</p>\n<p>效率工程某一版本的旧规范：（内部链接地址）</p>\n<p>M 项目的设计规范现在是使用 sketch 制作，通过插件上传到摹客平台上</p>\n<h3>2. 使用 React 管理设计规范</h3>\n<p>使用 react &#x26; typescript 输出 M 项目的设计规范（sketch 文件），修改配置文件（src/config.ts）中的变量，就可以修改设计规范中的配色、文本字号、排版信息。</p>\n<p><strong>关于这个工具有兴趣的同学可以在我的博客里查看详情：</strong> <a href=\"http://dwbbb.com/blog/react-sketchapp-build-design-system/\">http://dwbbb.com/blog/react-sketchapp-build-design-system/</a></p>\n<h3>3. 为什么使用代码生成设计规范？</h3>\n<p><strong>Sketch 中管理设计系统的资产是复杂、容易出错且耗时的。设计资产的稳定迭代能够提高设计师与零设计团队的工作效率。</strong></p>\n<p>在设计规范逐渐复杂时，对规范的版本迭代变得越来越难。以往设计师需要手动去修改规范，这样往往容易出错，而且速度比较慢，尤其是制作一些重复性较强的内容的时候，例如调色板上面可能会有上百种颜色，这些色彩可能会频繁调整。</p>\n<p>使用代码生成设计稿还有一些优点：</p>\n<ol>\n<li>代码控制设计规范的版本迭代</li>\n<li>代码可以方便地输出重复性的视图</li>\n<li>React-sketchapp 这个工具使用 React，有利于程序上的复用，包括变量文件、组件代码及其样式。</li>\n<li>使用真实数据或组件生成设计稿，这将使设计稿与最终产出的页面更接近</li>\n<li>基于 Sketch 定制一些效率工具，例如通过简单的配置生成完整设计规范，从而将设计规范快速应用到一系列项目中</li>\n</ol>\n<h3>4. 内部系统需要设计规范吗？</h3>\n<p>国内很多团队缺少设计师，或者设计资源不够充足，往往需要程序员直接上手进行设计（尤其是中后台系统），这时程序员就会跟着感觉走，写出丑陋的页面甚至难以维护的代码。缺乏规范的页面即使使用了美观的 UI 库也会成为东施效颦，不伦不类。</p>\n<p>因此对于这样的团队来说，程序员学习一些设计规范的基本使用方式，将会大大改善这一情况：遵循一定的设计规范进行设计将会快速提高这些页面的颜值，工具赏心悦目，使用者使用起来工作也会很开心。</p>\n<h2>四、还可以做什么？</h2>\n<p>确定了一套设计规范，并用代码实现，导出 sketch，这样就够了么？</p>\n<p>其实还有很多可以做的事情</p>\n<h3>1. 代码生成 sketch 模板库</h3>\n<p>设计师可以使用 sketch 中的模板库快速在设计稿中插入组件</p>\n<img src=\"/img/mars/res14.png\" width=\"80%\">\n<h3>2. 提供组件的快速配置</h3>\n<p>（如下图右侧的输入框、下拉选项），快速修改组件</p>\n<img src=\"/img/mars/res15.jpeg\" width=\"80%\">\n<img src=\"/img/mars/res16.png\" width=\"80%\">\n<h3>3. 效率工具</h3>\n<p>可以提供一个站点，在线填写一些非常简单的配置项（例如产品的配色、字号、圆角等），服务端起一个服务运行 mars-sketch-ts 这个项目，提供在线导出设计规范(sketch/图片/pdf)、样式变量（css/js）、sketch 模板库模板（提供给设计师进行业务组件的二次设计或业务设计稿的开发）</p>\n<h2>五、总结</h2>\n<p>工具只是一种方式，只是为设计规范提供了准确、稳定的迭代，并体现到代码上。</p>\n<p>最重要的还是要对齐前端、UI 对设计规范的理解，避免在长时间的设计开发过程中 UI 设计风格、前端样式代码逐渐散乱。</p>","frontmatter":{"title":"记一次前端项目 UI 收敛实践","date":"May 30, 2021","gallery":null},"excerpt":"文章摘要：前段时间我在公司参与开发了内部项目（以下称作 “M 项目” ），开发一段时间后，项目的 UI 设计风格、前端样式代码逐渐散乱。本文记录了一次从散乱到收敛的实践过程，顺便介绍了一种通过代码管理设计规范的方案，希望能给大家带来帮助。 一、背景 M 项目的设计稿，经历过若干次迭代后，设计风格、规范发生了一些变化；UI 设计时有些设计元素偏离了设计规范。 前端开发时，code review 频率不高，样式代码的编写有待规范，例如有时有的同学直接从摹客生成的冗余样式代码复制过来用。 前端、UI 对设计规范的理解不一致，例如 UI 的 font-weight 有 400/500/600/70…"}},"pageContext":{"slug":"/blog/mars-ui-convergence/","previous":{"fields":{"slug":"/design/mportal-design/"},"frontmatter":{"title":"Mportal Design","type":"design","photos":["/img/md/md.jpg"],"tags":null,"process":null}},"next":{"fields":{"slug":"/blog/docs-darkmode/"},"frontmatter":{"title":"暗黑模式 Code Review & 分享","type":"blog","photos":["/img/darkmode/banner.jpg"],"tags":["JavaScript"],"process":null}}}},"staticQueryHashes":["3128451518"]}