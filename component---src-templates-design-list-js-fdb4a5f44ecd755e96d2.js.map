{"version":3,"sources":["webpack:///./src/templates/design-list.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","pageContext","currentPage","numPages","toString","location","extraClassname","keywords","map","node","frontmatter","fields","slug","className","key","onClick","window","open","photos","length","style","date","dangerouslySetInnerHTML","__html","excerpt","React","Component"],"mappings":"2KAMMA,E,kGACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MACrC,EAAkCR,KAAKC,MAAMQ,YAArCC,EAAR,EAAQA,YAAR,EAAqBC,SAGJD,EAAc,GAAM,IAAWA,EAAc,GAAGE,YAC/CF,EAAc,GAAGE,WAEnC,OACE,kBAAC,IAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,EAAWY,eAAe,oBACtE,kBAAC,IAAD,CACET,MAAOH,EACPa,SAAU,CAAC,OAAD,yDAEXT,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,6BAASC,UAAU,SAASC,IAAKL,EAAKE,OAAOC,KAAMG,QAAS,kBAAMC,OAAOC,KAAKR,EAAKE,OAAOC,KAAM,WAE1FH,EAAKC,YAAYQ,QAAUT,EAAKC,YAAYQ,OAAOC,QAAUV,EAAKC,YAAYQ,OAAO,GACrF,yBAAKL,UAAU,aAAaO,MAAO,CAAC,gBAAkB,QAAQX,EAAKC,YAAYQ,QAAUT,EAAKC,YAAYQ,OAAOC,QAAUV,EAAKC,YAAYQ,OAAO,IAA/G,OAA4H,KAElK,yBAAKL,UAAU,kBACb,wBAAIA,UAAU,SAAShB,GACvB,+BAAQY,EAAKC,YAAYW,MACzB,uBAAGC,wBAAyB,CAAEC,OAAQd,EAAKe,kB,GA5BrCC,IAAMC,WA+EfrC","file":"component---src-templates-design-list-js-fdb4a5f44ecd755e96d2.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/Layout'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} extraClassname=\"container-design\">\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `dwb`, `董文博`, `dwbbb`, `dwbbb.com`,`javascript`, `design`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article className=\"m-post\" key={node.fields.slug} onClick={() => window.open(node.fields.slug, '_self')}>\n                {\n                  node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0] ?\n                  <div className=\"m-post-img\" style={{'backgroundImage': `url(${node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0]})`}} /> : null\n                }\n                <div className=\"m-post-content\">\n                  <h3 className=\"title\">{title}</h3>\n                  <small>{node.frontmatter.date}</small>\n                  <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                </div>\n            </article>\n          )\n        })}\n        {/* <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            alignItems: 'center',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\">\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: '0 8px',\n              }}\n            >\n              <Link\n                to={`/${i === 0 ? '' : i + 1}`}\n                style={{\n                  textDecoration: 'none',\n                  color: i + 1 === currentPage ? '#ffffff' : '',\n                  background: i + 1 === currentPage ? '#007acc' : '',\n                  padding: '.5em'\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\">\n              Next Page →\n            </Link>\n          )}\n        </ul> */}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query designPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        frontmatter: {\n          type: {\n            eq: \"design\"\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(\n            format: PLAIN\n            pruneLength: 90\n            truncate: true\n          )\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            type\n            photos\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}