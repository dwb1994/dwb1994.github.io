{"version":3,"sources":["webpack:///./src/templates/reading-list.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","pageContext","currentPage","numPages","toString","location","extraClassname","keywords","map","node","frontmatter","fields","slug","process","tags","percent","Math","floor","level","className","key","onClick","window","open","photos","length","style","item","width","React","Component"],"mappings":"2KAMMA,E,kGACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MACrC,EAAkCR,KAAKC,MAAMQ,YAArCC,EAAR,EAAQA,YAAR,EAAqBC,SAGJD,EAAc,GAAM,IAAWA,EAAc,GAAGE,YAC/CF,EAAc,GAAGE,WAEnC,OACE,kBAAC,IAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,EAAWY,eAAe,qBACtE,kBAAC,IAAD,CACET,MAAOH,EACPa,SAAU,CAAC,OAAD,0DAEXT,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAC9CC,EAAUJ,EAAKC,YAAYG,QAC3BC,EAAOL,EAAKC,YAAYI,KACxBC,EAAUC,KAAKC,MAAMJ,EAAQ,GAAKA,EAAQ,GAAK,KACjDK,EAAQ,GAQZ,OAPIH,GAAW,GACbG,EAAQ,MACCH,EAAU,IAAMA,EAAU,IACnCG,EAAQ,SACa,MAAZH,IACTG,EAAQ,YAGR,6BAASC,UAAU,SAASC,IAAKX,EAAKE,OAAOC,KAAMS,QAAS,kBAAMC,OAAOC,KAAKd,EAAKE,OAAOC,KAAM,WAE1FH,EAAKC,YAAYc,QAAUf,EAAKC,YAAYc,OAAOC,QAAUhB,EAAKC,YAAYc,OAAO,GACrF,yBAAKL,UAAU,aAAaO,MAAO,CAAC,gBAAkB,QAAQjB,EAAKC,YAAYc,QAAUf,EAAKC,YAAYc,OAAOC,QAAUhB,EAAKC,YAAYc,OAAO,IAA/G,OAA4H,KAElK,yBAAKL,UAAU,kBACb,wBAAIA,UAAU,SAAStB,GACvB,yBAAKsB,UAAU,WAEXL,EAAKN,KAAI,SAAAmB,GAAI,OAAI,yBAAKR,UAAU,YAAYQ,MAE9C,yBAAKR,UAAU,SACf,yBAAKA,UAAS,gBAAkBD,GAC9B,yBAAKC,UAAU,WAAWJ,EAA1B,KACA,yBAAKI,UAAU,aACb,yBAAKA,UAAU,iBAAiBO,MAAO,CAAEE,MAAOb,EAAU,eAQ1E,gC,GAtDgBc,IAAMC,WA4DfzC","file":"component---src-templates-reading-list-js-fffa6205e0659c54d3a4.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/Layout'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} extraClassname=\"container-reading\">\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `dwb`, `董文博`, `dwbbb`, `dwbbb.com`,`javascript`, `reading`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          const process = node.frontmatter.process;\n          const tags = node.frontmatter.tags;\n          const percent = Math.floor(process[0] / process[1] * 100);\n          let level = '';\n          if (percent <= 20) {\n            level = 'low';\n          } else if (percent > 20 && percent < 100) {\n            level = 'middle';\n          } else if (percent === 100) {\n            level = 'complete';\n          }\n          return (\n            <article className=\"m-post\" key={node.fields.slug} onClick={() => window.open(node.fields.slug, '_self')}>\n                {\n                  node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0] ?\n                  <div className=\"m-post-img\" style={{'backgroundImage': `url(${node.frontmatter.photos && node.frontmatter.photos.length && node.frontmatter.photos[0]})`}} /> : null\n                }\n                <div className=\"m-post-content\">\n                  <h3 className=\"title\">{title}</h3>\n                  <div className=\"content\">\n                    {\n                      tags.map(item => <div className=\"item tag\">{item}</div>)\n                    }\n                    <div className=\"item\"></div>\n                    <div className={`item process ${level}`}>\n                      <div className=\"percent\">{percent}%</div>\n                      <div className=\"line-base\">\n                        <div className=\"line-highlight\" style={{ width: percent + '%' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n            </article>\n          )\n        })}\n        <div></div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query readingPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: {\n        frontmatter: {\n          type: {\n            eq: \"reading\"\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(\n            format: PLAIN\n            pruneLength: 90\n            truncate: true\n          )\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            type\n            photos\n            tags\n            process\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}